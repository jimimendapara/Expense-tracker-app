{"version":3,"sources":["components/UI/Card.js","components/NewExpense/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenceItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenceItem","title","amount","ExpensesList","item","length","map","expense","id","ChartBar","barFilledHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDatapoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","items","filter","toString","selectedYear","ExpenseForm","enterTitle","setEnterTitle","enterAmount","setEnterAmount","enterDate","setEnterDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","Dummy_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.795d0ae5.chunk.js","sourcesContent":["import './Card.css';\n\nconst Card = (props) => {\nconst classes = 'card ' + props.className;\n\n    return(\n        <div className={classes}>{props.children}</div>\n    );\n\n}\n\nexport default Card;","import React from 'react';\n\nimport './ExpensesFilter.css';\n\nconst ExpensesFilter = (props) => {\n  const dropdownChangeHandler = (event) => {\n    props.onChangeFilter(event.target.value);\n  };\n\n  return (\n    <div className='expenses-filter'>\n      <div className='expenses-filter__control'>\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={dropdownChangeHandler}>\n          <option value='2022'>2022</option>\n          <option value='2021'>2021</option>\n          <option value='2020'>2020</option>\n          <option value='2019'>2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;","import './ExpenseDate.css';\n\nconst ExpenseDate = (props) =>{\n    const month = props.date.toLocaleString('en-US', {month: 'long'});   \n    const day = props.date.toLocaleString('en-US', {day: '2-digit'});\n    const year = props.date.getFullYear();\n\n    return (\n      <div className=\"expense-date\">\n        <div className=\"expese-date__month\">{month}</div>\n        <div className=\"expense-date__year\">{year}</div>\n        <div className=\"expese-date__day\">{day}</div>\n      </div>\n    );\n\n}\n\nexport default ExpenseDate;","//import React, {useState} from 'react';\n\n\nimport ExpenseDate from './ExpenseDate';\nimport './ExpenceItem.css';\nimport Card from '../UI/Card';\n\nconst ExpenceItem = (props) => {\n    // const [title, setTitle] = useState(props.title);\n\n    \n\n\n    // const clickHandler = () => {\n    //     setTitle('Updated!');\n    //     console.log(title);\n    // };\n\n   \n    return (\n        <li>\n        <Card className=\"expense-item\">\n           <ExpenseDate date={props.date} />\n            <div className=\"expense-item__description\">\n                <h2>{props.title}</h2>\n                <div className=\"expense-item__price\">${props.amount}</div>\n            </div>\n            {/* <button onClick={clickHandler}>Change Title</button> */}\n        </Card>\n        </li>\n    );\n}\n\nexport default ExpenceItem;","import ExpenceItem from \"./ExpenceItem\";\nimport './ExpensesList.css';\n\nconst ExpensesList = props => {\n\n  if(props.item.length === 0){\n   return <h2 className=\"expenses-list__fallback\">Found No Expenses.</h2>;\n  };\n\n  return( \n      <ul className=\"expenses-list\">\n            {\n                    props.item.map((expense) => (\n                        <ExpenceItem\n                          key={expense.id}\n                          title={expense.title}\n                          amount={expense.amount}\n                          date={expense.date}\n                        />\n                      ))\n            }\n      </ul>\n  );\n\n}\nexport default ExpensesList","import \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n  let barFilledHeight = \"0%\";\n\n  if (props.maxValue > 0) {\n    barFilledHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div className=\"chart-bar__fill\" style={{ height: barFilledHeight }}>\n           \n        </div>\n        \n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n      \n    </div>\n  );\n};\nexport default ChartBar;\n","import ChartBar from './ChartBar';\nimport './Chart.css';\n\nconst Chart = (props) => {\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\n    const totalMaximum = Math.max(...dataPointValues);\n\n    return (\n      <div className=\"chart\">\n        {props.dataPoints.map((dataPoint) => (\n          <ChartBar\n            key={dataPoint.label}\n            value={dataPoint.value}\n            maxValue={totalMaximum}\n            label={dataPoint.label}\n          />\n        ))}\n      </div>\n    );\n\n};\nexport default Chart;","import Chart from '../Chart/Chart';\nconst ExpensesChart = props => {\n    const chartDatapoints = [\n        {label: 'Jan', value: 0},\n        {label: 'Feb', value: 0},\n        {label: 'Mar', value: 0},\n        {label: 'Apr', value: 0},\n        {label: 'May', value: 0},\n        {label: 'Jun', value: 0},\n        {label: 'Jul', value: 0},\n        {label: 'Aug', value: 0},\n        {label: 'Sup', value: 0},\n        {label: 'Oct', value: 0},\n        {label: 'Nov', value: 0},\n        {label: 'Dec', value: 0}\n    ];\n\n    for(const expense of props.expenses) {\n        const expenseMonth = expense.date.getMonth(); //starting at 0 = jan => 0\n        chartDatapoints[expenseMonth].value += expense.amount;\n    }\n\n\n    return (\n        <Chart dataPoints={chartDatapoints}/>\n    );\n\n};\nexport default ExpensesChart;","import React, { useState } from \"react\";\nimport \"./Expenses.css\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"../NewExpense/ExpensesFilter\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from './ExpensesChart';\n\nfunction Expenses(props) {\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpenses = props.items.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  // let expensesContent = <p>No expenses Found.</p>;\n  // if(filteredExpenses.length>0){\n  //   expensesContent = filteredExpenses.map((expense) => (\n  //     <ExpenceItem\n  //       key={expense.id}\n  //       title={expense.title}\n  //       amount={expense.amount}\n  //       date={expense.date}\n  //     />\n  //   ))\n  // };\n\n  return (\n    <Card className=\"expenses\">\n      <ExpensesFilter\n        selected={filteredYear}\n        onChangeFilter={filterChangeHandler}\n      />\n      <ExpensesChart expenses={filteredExpenses}/>\n      <ExpensesList item={filteredExpenses} />\n      {/* {expensesContent} */}\n      {/* {filteredExpenses.length === 0 && <p>No expenses Found.</p>}\n      {filteredExpenses.length > 0 &&\n        filteredExpenses.map((expense) => (\n          <ExpenceItem\n            key={expense.id}\n            title={expense.title}\n            amount={expense.amount}\n            date={expense.date}\n          />\n        ))} */}\n    </Card>\n  );\n}\n\nexport default Expenses;\n","import React, { useState } from \"react\";\n\nimport \"./ExpenseForm.css\";\n\n\nconst ExpenseForm = (props) => {\n  const [enterTitle, setEnterTitle] = useState(\"\");\n  const [enterAmount, setEnterAmount] = useState(\"\");\n  const [enterDate, setEnterDate] = useState(\"\");\n  //const[formClass, setFormClass] = useState(\"hide-form\");\n\n  //    const [userInput, setUserInput] = useState(\n  //         {\n  //             enterTitle:'',\n  //             enterAmount:'',\n  //             enterDate:'',\n  //         }\n  //     );\n\n  const titleChangeHandler = (event) => {\n    setEnterTitle(event.target.value);\n\n    // Alternativ ways for doing same things\n    //    setUserInput({\n    //        ...userInput,\n    //        enterTitle: event.target.value,\n    //    });\n\n    //safe way to do when you want previous value\n    // setUserInput((prevState) => {\n    //     return {...prevState, enterTitle: event.target.value};\n    // });\n  };\n\n  const amountChangeHandler = (event) => {\n    setEnterAmount(event.target.value);\n    //    setUserInput({\n    //        ...userInput,\n    //        enterAmount: event.target.value,\n    //    })\n  };\n\n  const dateChangeHandler = (event) => {\n    setEnterDate(event.target.value);\n    //    setUserInput({\n    //        ...userInput,\n    //        enterDate: event.target.value,\n    //    })\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const expenseData = {\n      title: enterTitle,\n      amount: +enterAmount,\n      date: new Date(enterDate),\n    };\n\n    props.onSaveExpenseData(expenseData);\n    setEnterTitle('');\n    setEnterAmount('');\n    setEnterDate('');\n   // toggleform();\n  };\n\n  // function toggleform(){\n  //   if(formClass === \"\"){\n  //     setFormClass(\"hide-form\");\n  //   }\n  //   else{\n  //   setFormClass(\"\");\n  // }\n\n  // };\n\n  return (\n    <div>\n    {/* <button onClick={toggleform}>Add new Expense</button> */}\n\n    <form onSubmit={submitHandler}>\n      \n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input type=\"text\" value={enterTitle} onChange={titleChangeHandler} />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={enterAmount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            value={enterDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"button\" onClick={props.onCancel}>Cancle</button>\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n    </div>\n  );\n};\n\nexport default ExpenseForm;\n","import React, {useState} from \"react\";\nimport './NewExpense.css';\nimport ExpenseForm from \"./ExpenseForm\";\n//import { useState } from 'react/cjs/react.development';\n\n\nconst NewExpense = (props) => {\n        const [isEditing, setIsEditing] = useState(false);\n\n    const saveExpenseDataHandler = (enteredExpenseData) => {\n        const expenseData = {\n            ...enteredExpenseData,\n            id: Math.random().toString()\n        };\n\n         props.onAddExpense(expenseData);\n         setIsEditing(false);\n    };\n\n    const startEditingHandler = () => {\n        setIsEditing(true);\n    };\n\n    const stopEditingHandler = () => {\n            setIsEditing(false);\n    };\n\n    return(\n        <div className=\"new-expense\">\n            {!isEditing && <button onClick={startEditingHandler}>Add new Expense</button>}\n            {isEditing && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={stopEditingHandler}/>}\n        </div>\n    );\n};\n\nexport default NewExpense;","//import ExpenceItem from \"./components/ExpenceItem\";\nimport React, {useState} from 'react';\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from './components/NewExpense/NewExpense';\n\nconst Dummy_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  {\n    id: \"e2\",\n    title: \"New TV\",\n    amount: 799.49,\n    date: new Date(2021, 2, 12),\n  },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\n\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(Dummy_EXPENSES);\n  \n  const addExpenseHandler = expense => {\n    setExpenses(prevExpenses => {\n      return [expense, ...prevExpenses];\n    });\n  };\n \n  return (\n    <div>\n     <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}